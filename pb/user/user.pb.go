// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Timestamp from public import google/protobuf/timestamp.proto
type Timestamp = timestamp.Timestamp

// Empty from public import google/protobuf/empty.proto
type Empty = empty.Empty

type User struct {
	Username             string               `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email                string               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type RegisterUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserRequest) Reset()         { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()    {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *RegisterUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserRequest.Unmarshal(m, b)
}
func (m *RegisterUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserRequest.Marshal(b, m, deterministic)
}
func (m *RegisterUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserRequest.Merge(m, src)
}
func (m *RegisterUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterUserRequest.Size(m)
}
func (m *RegisterUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserRequest proto.InternalMessageInfo

func (m *RegisterUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RegisterUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserResponse struct {
	Username             string               `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email                string               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type UserStreamRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserStreamRequest) Reset()         { *m = UserStreamRequest{} }
func (m *UserStreamRequest) String() string { return proto.CompactTextString(m) }
func (*UserStreamRequest) ProtoMessage()    {}
func (*UserStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *UserStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserStreamRequest.Unmarshal(m, b)
}
func (m *UserStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserStreamRequest.Marshal(b, m, deterministic)
}
func (m *UserStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserStreamRequest.Merge(m, src)
}
func (m *UserStreamRequest) XXX_Size() int {
	return xxx_messageInfo_UserStreamRequest.Size(m)
}
func (m *UserStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserStreamRequest proto.InternalMessageInfo

func (m *UserStreamRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type UserListResponse struct {
	User                 []*User  `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserListResponse) Reset()         { *m = UserListResponse{} }
func (m *UserListResponse) String() string { return proto.CompactTextString(m) }
func (*UserListResponse) ProtoMessage()    {}
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *UserListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserListResponse.Unmarshal(m, b)
}
func (m *UserListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserListResponse.Marshal(b, m, deterministic)
}
func (m *UserListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserListResponse.Merge(m, src)
}
func (m *UserListResponse) XXX_Size() int {
	return xxx_messageInfo_UserListResponse.Size(m)
}
func (m *UserListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserListResponse proto.InternalMessageInfo

func (m *UserListResponse) GetUser() []*User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*RegisterUserRequest)(nil), "user.RegisterUserRequest")
	proto.RegisterType((*UserResponse)(nil), "user.UserResponse")
	proto.RegisterType((*UserStreamRequest)(nil), "user.UserStreamRequest")
	proto.RegisterType((*UserListResponse)(nil), "user.UserListResponse")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0x31, 0x4f, 0xfb, 0x30,
	0x10, 0xc5, 0xeb, 0x7f, 0xfb, 0x47, 0xe9, 0x15, 0x21, 0x30, 0xa8, 0x04, 0x23, 0x41, 0xe5, 0xa9,
	0x53, 0x8a, 0xc2, 0x84, 0x60, 0xe9, 0xc0, 0xc6, 0x50, 0x05, 0x98, 0x91, 0xdb, 0x1e, 0x55, 0xa4,
	0xba, 0x0e, 0xb6, 0x03, 0x42, 0x7c, 0x44, 0xbe, 0x14, 0xb2, 0xdd, 0xa4, 0x05, 0x3a, 0x20, 0x06,
	0xb6, 0xdc, 0xf9, 0xf9, 0x7e, 0xef, 0x9d, 0x03, 0x50, 0x1a, 0xd4, 0x49, 0xa1, 0x95, 0x55, 0xb4,
	0xe5, 0xbe, 0xd9, 0xe9, 0x4c, 0xa9, 0xd9, 0x1c, 0x07, 0xbe, 0x37, 0x2e, 0x1f, 0x07, 0x36, 0x97,
	0x68, 0xac, 0x90, 0x45, 0x90, 0xb1, 0xe3, 0xaf, 0x02, 0x94, 0x85, 0x7d, 0x0d, 0x87, 0xdc, 0x40,
	0xeb, 0xde, 0xa0, 0xa6, 0x0c, 0x22, 0x37, 0x6d, 0x21, 0x24, 0xc6, 0xa4, 0x47, 0xfa, 0xed, 0xac,
	0xae, 0xe9, 0x01, 0xfc, 0x47, 0x29, 0xf2, 0x79, 0xfc, 0xcf, 0x1f, 0x84, 0x82, 0x5e, 0x00, 0x4c,
	0x34, 0x0a, 0x8b, 0xd3, 0x07, 0x61, 0xe3, 0x66, 0x8f, 0xf4, 0x3b, 0x29, 0x4b, 0x02, 0x2b, 0xa9,
	0x58, 0xc9, 0x5d, 0x65, 0x26, 0x6b, 0x2f, 0xd5, 0x43, 0xcb, 0x27, 0xb0, 0x9f, 0xe1, 0x2c, 0x37,
	0x16, 0xb5, 0x83, 0x67, 0xf8, 0x54, 0xa2, 0xb1, 0xbf, 0xf0, 0xc0, 0x20, 0x2a, 0x84, 0x31, 0x2f,
	0x4a, 0x4f, 0xbd, 0x83, 0x76, 0x56, 0xd7, 0xfc, 0x0d, 0xb6, 0xc3, 0x70, 0x53, 0xa8, 0x85, 0xc1,
	0xbf, 0x4d, 0x38, 0x80, 0x3d, 0x07, 0xbf, 0xb5, 0x1a, 0x85, 0xfc, 0x41, 0x3e, 0x9e, 0xc2, 0xae,
	0xbb, 0x70, 0x93, 0x1b, 0x5b, 0x3b, 0x3e, 0x01, 0xff, 0xc2, 0x31, 0xe9, 0x35, 0xfb, 0x9d, 0x14,
	0x12, 0xff, 0xf4, 0x3e, 0x93, 0xef, 0xa7, 0xef, 0x04, 0x3a, 0x9e, 0x82, 0xfa, 0x39, 0x9f, 0x20,
	0xbd, 0x84, 0xa8, 0x5a, 0x2b, 0x3d, 0x0a, 0xea, 0x0d, 0x6b, 0x66, 0x74, 0x6d, 0xd0, 0x12, 0xc5,
	0x1b, 0xf4, 0x0a, 0xa2, 0xca, 0x00, 0xed, 0x7e, 0x0b, 0x79, 0xed, 0x7e, 0x19, 0xd6, 0x5d, 0xdd,
	0x5c, 0x37, 0xca, 0x1b, 0x74, 0x08, 0x3b, 0x55, 0x37, 0x64, 0xa6, 0x87, 0x2b, 0xed, 0xa7, 0x2d,
	0x6c, 0xc6, 0x9f, 0x91, 0x51, 0x63, 0x44, 0xc6, 0x5b, 0x1e, 0x78, 0xfe, 0x11, 0x00, 0x00, 0xff,
	0xff, 0xea, 0xf1, 0x21, 0xb2, 0xe6, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	//注册用户
	Register(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	//用户列表(无参数)
	UserList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserListResponse, error)
	//用户流(服务端推送流)
	UserListStream(ctx context.Context, in *UserStreamRequest, opts ...grpc.CallOption) (UserService_UserListStreamClient, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Register(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/user.UserService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UserList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*UserListResponse, error) {
	out := new(UserListResponse)
	err := c.cc.Invoke(ctx, "/user.UserService/UserList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UserListStream(ctx context.Context, in *UserStreamRequest, opts ...grpc.CallOption) (UserService_UserListStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserService_serviceDesc.Streams[0], "/user.UserService/UserListStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceUserListStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserService_UserListStreamClient interface {
	Recv() (*UserResponse, error)
	grpc.ClientStream
}

type userServiceUserListStreamClient struct {
	grpc.ClientStream
}

func (x *userServiceUserListStreamClient) Recv() (*UserResponse, error) {
	m := new(UserResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	//注册用户
	Register(context.Context, *RegisterUserRequest) (*UserResponse, error)
	//用户列表(无参数)
	UserList(context.Context, *empty.Empty) (*UserListResponse, error)
	//用户流(服务端推送流)
	UserListStream(*UserStreamRequest, UserService_UserListStreamServer) error
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) Register(ctx context.Context, req *RegisterUserRequest) (*UserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedUserServiceServer) UserList(ctx context.Context, req *empty.Empty) (*UserListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserList not implemented")
}
func (*UnimplementedUserServiceServer) UserListStream(req *UserStreamRequest, srv UserService_UserListStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method UserListStream not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Register(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/UserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UserList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UserListStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServiceServer).UserListStream(m, &userServiceUserListStreamServer{stream})
}

type UserService_UserListStreamServer interface {
	Send(*UserResponse) error
	grpc.ServerStream
}

type userServiceUserListStreamServer struct {
	grpc.ServerStream
}

func (x *userServiceUserListStreamServer) Send(m *UserResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _UserService_Register_Handler,
		},
		{
			MethodName: "UserList",
			Handler:    _UserService_UserList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UserListStream",
			Handler:       _UserService_UserListStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "user.proto",
}
